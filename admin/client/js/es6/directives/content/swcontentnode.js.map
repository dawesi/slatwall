{"version":3,"sources":["directives/content/swcontentnode.ts"],"names":[],"mappings":"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","file":"directives/content/swcontentnode.js","sourceRoot":"/Users/ianhickey/Sites/Slatwall/","sourcesContent":["'use strict';\n\nangular.module('slatwalladmin')\n    .directive('swContentNode', [\n            '$log',\n            '$compile',\n            '$slatwall',\n            'partialsPath',\n            function(\n                $log,\n                $compile,\n                $slatwall,\n                partialsPath\n            ) {\n                return {\n                    restrict: 'A',\n                    scope:{\n                        contentData:'='\n                    },\n                    templateUrl: partialsPath + 'content/contentnode.html',\n                    link: function(scope, element, attr) {\n                        if(angular.isDefined(scope.$parent)){\n                            if(angular.isDefined(scope.$parent.child)){\n                                scope.contentData = scope.$parent.child; \n                                if(angular.isUndefined(scope.depth) && angular.isUndefined(scope.$parent.depth)){\n                                    scope.depth = 1;\n                                }else{\n                                    scope.depth = scope.$parent.depth + 1;\n                                }\n                            }\n                            \n                              \n                        }\n                        \n                        var childContentColumnsConfig = [{\n                                propertyIdentifier: '_content.contentID',\n                                isVisible: false,\n                                isSearchable: false\n                            }, \n                            {\n                                propertyIdentifier: '_content.title',\n                                isVisible: true,\n                                isSearchable: true\n                            },\n                            {\n                                propertyIdentifier: '_content.site.siteName',\n                                isVisible: true,\n                                isSearchable: true\n                            }, {\n                                propertyIdentifier: '_content.contentTemplateFile',\n                                persistent: false,\n                                setting: true,\n                                isVisible: true\n                            },\n                            //need to get template via settings\n                            {\n                                propertyIdentifier: '_content.allowPurchaseFlag',\n                                isVisible: true,\n                                isSearchable: true\n                            }, {\n                                propertyIdentifier: '_content.productListingPageFlag',\n                                isVisible: true,\n                                isSearchable: true\n                            }, {\n                                propertyIdentifier: '_content.activeFlag',\n                                isVisible: true,\n                                isSearchable: true\n                            }\n                        ];\n                       \n\n                        scope.getChildContent = function(parentContentRecord) {\n                             var childContentfilterGroupsConfig = [{\n                                \"filterGroup\": [{\n                                    \"propertyIdentifier\": \"_content.parentContent.contentID\",\n                                    \"comparisonOperator\": \"=\",\n                                    \"value\": parentContentRecord.contentID\n                                }]\n                            }];\n\n                            var collectionListingPromise = $slatwall.getEntity('Content', {\n                                columnsConfig: angular.toJson(childContentColumnsConfig),\n                                filterGroupsConfig: angular.toJson(childContentfilterGroupsConfig),\n                                allRecords: true\n                            });\n                            collectionListingPromise.then(function(value) {\n                                parentContentRecord.children = value.records;\n                                angular.forEach(parentContentRecord.children,function(child){\n                                    scope.child = child;\n                                    element.parent().append($compile('<tr class=\"childNode\" style=\"margin-left:15px\" sw-content-node ></tr>')(scope));\n                                });\n                            });\n                        }\n\n                    }\n                }\n\n            }]);"]}